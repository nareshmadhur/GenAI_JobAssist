'use server';
/**
 * @fileOverview Generates a structured CV from a user's bio, tailored to a job description.
 *
 * - generateCv - A function that handles the CV generation.
 * - CvInput - The input type for the generateCv function.
 * - CvOutput - The return type for the generateCv function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CvInputSchema = z.object({
  jobDescription: z.string().describe('The job description to tailor the CV for.'),
  userBio: z.string().describe("The user's detailed bio, containing work experience, skills, projects, and education."),
});
export type CvInput = z.infer<typeof CvInputSchema>;

const CvSectionSchema = z.object({
  title: z.string().describe("The title of the CV section (e.g., 'Work Experience', 'Skills')."),
  content: z.string().optional().describe("Fully generated content for this section, like a professional summary. Provided only when the entire section is generated by the AI."),
  advice: z.array(z.string()).optional().describe("A list of actionable advice points for improving this section of the user's CV. Use markdown for bolding key terms."),
});

const CvOutputSchema = z.object({
  sections: z.array(CvSectionSchema).describe("An array of CV sections. Each section contains a title and either fully generated content or a list of specific advice points."),
});
export type CvOutput = z.infer<typeof CvOutputSchema>;

export async function generateCv(input: CvInput): Promise<CvOutput> {
  return generateCvFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateCvPrompt',
  input: {schema: CvInputSchema},
  output: {schema: CvOutputSchema},
  prompt: `You are an expert CV writer and career coach. Your task is to analyze a user's bio and a job description, then provide structured, section-by-section feedback for building a tailored CV. Do not generate a full CV document. Instead, create a series of targeted suggestions.

**Crucially, you must only use information explicitly present in the User Bio. Do not invent or exaggerate details.**

Based on the user's bio and the job description, generate the following sections IF they are relevant and you can provide meaningful feedback:

1.  **Summary**: Create a single, fully-written professional summary (2-4 sentences) that is ready to be used. Put this in the 'content' field for this section.
2.  **Work Experience**: Do NOT rewrite the user's work experience. Instead, provide a list of 2-4 actionable **advice** points. Focus on how to better align their existing experience with the job description. For example, suggest quantifying achievements, using specific keywords from the job description, or highlighting certain responsibilities.
3.  **Skills**: Provide a list of actionable **advice** points for the skills section. Suggest which skills from their bio to emphasize, or how to categorize them effectively for this specific job.
4.  **Education**: If education is relevant, provide **advice** on how to present it. For example, "Mention your coursework in Machine Learning as it's relevant to the role."
5.  **Projects**: If projects are mentioned, provide **advice** on how to best showcase them to align with the job's requirements.

For each section, decide if you are providing full 'content' or a list of 'advice'. Only provide a section if there is enough information in the bio to give valuable, specific feedback.

Job Description:
{{{jobDescription}}}

User Bio:
{{{userBio}}}

Generate the structured CV advice now.`,
});

const generateCvFlow = ai.defineFlow(
  {
    name: 'generateCvFlow',
    inputSchema: CvInputSchema,
    outputSchema: CvOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
